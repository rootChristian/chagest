version: "3.8"

services:
   mongodb:
      image: mongo
      container_name: mongodb-chagest
      #restart: always
      ports:
         - 27017:27017
      environment:
         MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
         MONGO_INITDB_ROOT_PASSWORD: ${DB_USER_PASS}
      volumes:
         - mongodb_data:/data/db
      networks:
         - chagest

   server-chagest:
      #restart: always
      build:
         context: ./backend_chagest
         dockerfile: Dockerfile
      container_name: backend-chagest
      volumes:
         - /app/node_modules
         - ./backend_chagest:/app
      #ports:
      #   - 4000:8000
      depends_on:
         - mongodb
      networks:
         - chagest

   client-chagest:
      stdin_open: true
      restart: always
      build:
         context: ./frontend_chagest
         dockerfile: Dockerfile
      container_name: frontend-chagest
      volumes:
         - ./app/node_modules
         - ./frontend_chagest:/app
      #ports:
      #   - 3000:3000
      #depends_on:
      #   - server-chagest
      networks:
         - chagest

   nginx:
      depends_on:
         - server-chagest
         - client-chagest
      container_name: nginx-chagest
      restart: always
      build:
         dockerfile: Dockerfile
         context: ./nginx_chagest
      ports:
         - "80:80"

networks:
   chagest:
volumes:
   mongodb_data:

      # version: "3.8"

      # services:
      #    server-chagest:
      #       restart: always
      #       # labels:
      #       #    - "traefik.http.routers.app1.rule=Host(`app1.traefik.me`)"
      #       #    - "traefik.http.routers.app1-tls.tls.domains[0].main=app1.traefik.me"
      #       #    - "traefik.http.routers.app1-tls.tls.domains[0].sans=app1-*.traefik.me"
      #       #    - traefik.http.routers.app1.tls=true
      #       build:
      #          context: ./backend_chagest
      #          dockerfile: Dockerfile
      #       container_name: backend-chagest
      #       volumes:
      #          - /app/node_modules
      #          - ./backend_chagest:/app
      #       ports:
      #          - 8000:8000
      #       depends_on:
      #          - mongodb
      #       environment:
      #          NODE_ENV: ${NODE_ENV}
      #          MONGO_URI: mongodb://${DB_USER}:${DB_USER_PASS}@mongodb
      #       networks:
      #          - chagest

      #    mongodb:
      #       image: mongo
      #       restart: always
      #       ports:
      #          - 27017:27017
      #       environment:
      #          MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      #          MONGO_INITDB_ROOT_PASSWORD: ${DB_USER_PASS}
      #       volumes:
      #          - mongodb-data:/data/db
      #       networks:
      #          - chagest

      #    client-chagest:
      #       restart: always
      #       build:
      #          context: ./frontend_chagest
      #          dockerfile: Dockerfile
      #       container_name: frontend-chagest
      #       volumes:
      #          - ./app/node_modules
      #          - ./frontend_chagest:/app
      #       ports:
      #          - 3000:3000
      #       depends_on:
      #          - server-chagest
      #       networks:
      #          - chagest
      #    # traefik:
      #    #    restart: unless-stopped
      #    #    container_name: traefik-chagest
      #    #    image: traefik:v2.0.2
      #    #    ports:
      #    #       - "80:80"
      #    #       - "443:443"
      #    #    labels:
      #    #       - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      #    #    volumes:
      #    #       - ./traefik.yml:/etc/traefik/traefik.yml
      #    #       - ./tls.yml:/etc/traefik/tls.yml
      #    #       - /var/run/docker.sock:/var/run/docker.sock
      #    #       - certs:/etc/ssl/traefik
      #    #    networks:
      #    #       - chagest

      #    # reverse-proxy-https-helper:
      #    #    image: alpine
      #    #    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
      #    #    volumes:
      #    #       - certs:/etc/ssl/traefik
      #    #    networks:
      #    #       - chagest

      # networks:
      #    chagest:
      # volumes:
      #    mongodb-data: #certs:
